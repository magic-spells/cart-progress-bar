// SCSS Variables (can be overridden before import)
$cart-progress-bar-height: 12px !default;
$cart-progress-bar-border-radius: 6px !default;
$cart-progress-bar-bg: #e9ecef !default;
$cart-progress-bar-fill-bg: #28a745 !default;
$cart-progress-bar-complete-bg: #007bff !default;
$cart-progress-bar-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1) !default;
$cart-progress-bar-transition-duration: 0.3s !default;

// Message styling
$cart-progress-message-font-size: 0.875rem !default;
$cart-progress-message-line-height: 1.4 !default;
$cart-progress-message-color: #495057 !default;
$cart-progress-message-complete-color: #155724 !default;
$cart-progress-message-margin: 0.5rem !default;

// Responsive breakpoints
$cart-progress-mobile-breakpoint: 768px !default;

// Cart progress bar component styles
cart-progress-bar {
	// CSS Custom Properties for customization (mapped from SCSS variables)
	--cart-progress-bar-height: #{$cart-progress-bar-height};
	--cart-progress-bar-border-radius: #{$cart-progress-bar-border-radius};
	--cart-progress-bar-bg: #{$cart-progress-bar-bg};
	--cart-progress-bar-fill-bg: #{$cart-progress-bar-fill-bg};
	--cart-progress-bar-complete-bg: #{$cart-progress-bar-complete-bg};
	--cart-progress-bar-shadow: #{$cart-progress-bar-shadow};
	--cart-progress-bar-transition-duration: #{$cart-progress-bar-transition-duration};
	--cart-progress-message-font-size: #{$cart-progress-message-font-size};
	--cart-progress-message-line-height: #{$cart-progress-message-line-height};
	--cart-progress-message-color: #{$cart-progress-message-color};
	--cart-progress-message-complete-color: #{$cart-progress-message-complete-color};
	--cart-progress-message-margin: #{$cart-progress-message-margin};

	// Dynamic progress percentage (set by JavaScript)
	--cart-progress-percent: 0%;

	display: block;
	width: 100%;
	max-width: 100%;

	// Message styling
	p[data-content-cart-progress-message] {
		font-size: var(--cart-progress-message-font-size);
		line-height: var(--cart-progress-message-line-height);
		color: var(--cart-progress-message-color);
		margin: var(--cart-progress-message-margin) 0;
		text-align: center;
		transition: color var(--cart-progress-bar-transition-duration) ease;

		@media (max-width: $cart-progress-mobile-breakpoint) {
			font-size: calc(var(--cart-progress-message-font-size) * 0.9);
			margin: calc(var(--cart-progress-message-margin) * 0.75) 0;
		}
	}

	// State-based styling
	&[data-complete='true'] {
		p[data-content-cart-progress-message] {
			color: var(--cart-progress-message-complete-color);
			font-weight: 600;
		}
	}

	// Progress level classes for additional styling hooks
	&.progress-low {
		--cart-progress-bar-fill-bg: #dc3545; // red for low progress
	}

	&.progress-medium {
		--cart-progress-bar-fill-bg: #ffc107; // yellow for medium progress
	}

	&.progress-high {
		--cart-progress-bar-fill-bg: #fd7e14; // orange for high progress
	}

	&.progress-complete {
		--cart-progress-bar-fill-bg: var(--cart-progress-bar-complete-bg);

		p[data-content-cart-progress-message] {
			color: var(--cart-progress-message-complete-color);
		}
	}
}

// Progress bar component styles
progress-bar {
	display: block;
	width: 100%;
	height: var(--cart-progress-bar-height);
	background-color: var(--cart-progress-bar-bg);
	border-radius: var(--cart-progress-bar-border-radius);
	box-shadow: var(--cart-progress-bar-shadow);
	overflow: hidden;
	position: relative;

	.progress-bar-fill {
		height: 100%;
		width: var(--cart-progress-percent);
		background-color: var(--cart-progress-bar-fill-bg);
		border-radius: var(--cart-progress-bar-border-radius);
		transition:
			width var(--cart-progress-bar-transition-duration) ease,
			background-color var(--cart-progress-bar-transition-duration) ease;
		position: relative;

		// Subtle gradient effect
		background-image: linear-gradient(
			45deg,
			rgba(255, 255, 255, 0.1) 25%,
			transparent 25%,
			transparent 50%,
			rgba(255, 255, 255, 0.1) 50%,
			rgba(255, 255, 255, 0.1) 75%,
			transparent 75%,
			transparent
		);
		background-size: 12px 12px;

		// Shine effect for completed state
		&::after {
			content: '';
			position: absolute;
			top: 0;
			left: -100%;
			width: 100%;
			height: 100%;
			background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
			transition: left 0.5s ease;
		}
	}

	// Animate shine effect when complete
	cart-progress-bar[data-complete='true'] &,
	cart-progress-bar.progress-complete & {
		.progress-bar-fill::after {
			left: 100%;
		}
	}

	// Accessibility improvements
	&:focus-visible {
		outline: 2px solid #007bff;
		outline-offset: 2px;
	}

	// High contrast mode support
	@media (prefers-contrast: high) {
		--cart-progress-bar-bg: #000000;
		--cart-progress-bar-fill-bg: #ffffff;
		border: 1px solid #ffffff;
	}

	// Reduced motion support
	@media (prefers-reduced-motion: reduce) {
		.progress-bar-fill {
			transition: none;
		}

		.progress-bar-fill::after {
			transition: none;
		}
	}
}

// Responsive adjustments
@media (max-width: $cart-progress-mobile-breakpoint) {
	cart-progress-bar {
		--cart-progress-bar-height: 10px;
		--cart-progress-message-margin: 0.375rem;
	}
}

// Dark mode support
@media (prefers-color-scheme: dark) {
	cart-progress-bar {
		--cart-progress-bar-bg: #343a40;
		--cart-progress-message-color: #e9ecef;
		--cart-progress-message-complete-color: #28a745;
	}
}

// Print styles
@media print {
	cart-progress-bar {
		.above-message,
		.below-message {
			color: #000000 !important;
		}

		progress-bar {
			border: 1px solid #000000;

			.progress-bar-fill {
				background-color: #000000 !important;
				background-image: none !important;
			}
		}
	}
}
